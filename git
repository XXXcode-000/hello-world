// git 开源 

git 版本控制和团队协作
前言:
	多人写作项目代码怎么管理？
	多个人需要共同参与一个软件开发
	一个软件可能有多个要支持的版本
	一个软件可能会用多种不同的运行环境
术语定义：基准（BaseLine）
	基准的命名有一个非常常用的三点命名法
	A.B.C
	A：从用户（消费者）角度看到的发布出的标记数（Release）
	B：从开发者角度看到的关键的版本号
	C：从开发者角度关注的修改版本号
版本管理系统
	用于追踪和管理对于一系列文件和资源修改的软件系统
Git的安装
	初次使用Git前请配置
	git config --global user.name ""
	git config --global user.email ""
	在文件目录创建版本库
	

分支操作
	git branch 查看当前分支
	git branch -a 查看包含本地和远端仓库在内的所有分支
	git branch <分支名> 创建分支
	git checkout <分支名> /git switch <分支名> 转换到分支xx上
	git checkout -b <分支名> / git switch -c <分支名> 创建并转换
	git branch -d <分支名> 删除本地分支
	git push origin --delete <分支名> 删除远端仓库上的分支
	
版本库
	git push origin <分支名> 将本地版本库同步到远端版本库
	git pull origin <分支名> 更新本地版本库
	git fetch 创建并更新所有远端分支的本地远端分支
	拉取（全部分支）更新并根据本地分支对应分支更新工作目录 git pull
	我们在工作区将文件编辑完成后 将编辑完成的文件git add到暂存区
	然后git commit -m 将暂存区的文件提交到本地分支
	最后通过git push origin 将本地分支上传到远端分支 成功上传
	git status 显示当前目录的修改

git
	git init 创建本地版本库
	git clone +网址 获取远端仓库
	git status 查看目前文件状态
	git log 查看历史提交 
	git reset --hard HEAD~ 回到上一个提交的版本
	git reset --hard HEAD~2 回到上上一个提交的版本
	git merge <分支名> 将分支上xxx的版本合并到当前分支上
		在master分支上执行当前语句，即将此分支合并到master上
		如果两个分支发生冲突，自动合并会失败，此时要编辑发生冲突的文件
		如果两个分支之间不发生冲突，则可成功合并
	

-----------------------------------------
开源项目的发掘地
GitHub  APACHE Gitee
Google Open Source 
Open Source
stackoverflow
-----------------------------------------

